version: "3"
services:

  db:
    image: postgres
    restart: always
    container_name: db_Course_docker
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=habbit
    volumes:
      - ./data/db/:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ['CMD-SHELL','pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5

  cache:
    image: redis:6.2-alpine
    container_name: redis_app
    command: redis-server --save 20 1 --loglevel warning
    ports:
      - "6379:6379"
    volumes:
      - ./data/cache:/data

  app:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: app
    container_name: Course_docker
    command: bash -c "
      python manage.py migrate
      && python manage.py prepare_users
      && python manage.py runserver 0.0.0.0:8000
      "
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_started
    ports:
      - "8000:8000"
    volumes:
        - ./Course_docker/:/Course_docker/

  celery_worker:
    image: app
    restart: always
    container_name: celery_worker
    env_file: /Course_docker/.env
    depends_on:
      db:
        condition: service_healthy
      app:
        condition: service_started
      cache:
        condition: service_started
    volumes:
      - ./Course_docker/:/Course_docker/
    command: celery -A config worker -l INFO

  celery_beat:
    image: app
    restart: always
    container_name: celery_beat
    env_file: /Course_docker/.env
    depends_on:
      db:
        condition: service_healthy
      app:
        condition: service_started
      cache:
        condition: service_started
    volumes:
      - ./Course_docker/:/Course_docker/
    command: celery -A config beat -l info -S django